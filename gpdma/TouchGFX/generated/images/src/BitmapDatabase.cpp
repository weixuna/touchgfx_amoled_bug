// 4.25.0 0x0ac11598
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_demo[]; // BITMAP_DEMO_ID = 0, Size: 240x296 pixels
extern const unsigned char image_fore[]; // BITMAP_FORE_ID = 1, Size: 65x65 pixels
extern const unsigned char image_fore_pressed[]; // BITMAP_FORE_PRESSED_ID = 2, Size: 65x65 pixels
extern const unsigned char image_hen[]; // BITMAP_HEN_ID = 3, Size: 65x65 pixels
extern const unsigned char image_hen_extra_data[];
extern const unsigned char image_jishi[]; // BITMAP_JISHI_ID = 4, Size: 65x65 pixels
extern const unsigned char image_jishi_extra_data[];
extern const unsigned char image_liangdu[]; // BITMAP_LIANGDU_ID = 5, Size: 65x65 pixels
extern const unsigned char image_liangdu_extra_data[];
extern const unsigned char image_mianimage[]; // BITMAP_MIANIMAGE_ID = 6, Size: 240x296 pixels
extern const unsigned char image_miaobiao[]; // BITMAP_MIAOBIAO_ID = 7, Size: 65x65 pixels
extern const unsigned char image_miaobiao_extra_data[];
extern const unsigned char image_naozhong[]; // BITMAP_NAOZHONG_ID = 8, Size: 65x65 pixels
extern const unsigned char image_naozhong_extra_data[];
extern const unsigned char image_shezhi[]; // BITMAP_SHEZHI_ID = 9, Size: 65x65 pixels
extern const unsigned char image_shezhi_extra_data[];
extern const unsigned char image_taiwan[]; // BITMAP_TAIWAN_ID = 10, Size: 65x65 pixels
extern const unsigned char image_taiwan_extra_data[];
extern const unsigned char image_uiuug[]; // BITMAP_UIUUG_ID = 11, Size: 65x65 pixels
extern const unsigned char image_wurao[]; // BITMAP_WURAO_ID = 12, Size: 65x65 pixels
extern const unsigned char image_wurao_extra_data[];
extern const unsigned char image_zhendong[]; // BITMAP_ZHENDONG_ID = 13, Size: 65x65 pixels
extern const unsigned char image_zhendong_extra_data[];

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_demo, 0, 240, 296, 0, 0, 240, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 296, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_fore, 0, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 65, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_fore_pressed, 0, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 65, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_hen, image_hen_extra_data, 65, 65, 28, 0, 9, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 65, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_jishi, image_jishi_extra_data, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 65, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_liangdu, image_liangdu_extra_data, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 65, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_mianimage, 0, 240, 296, 0, 0, 240, ((uint8_t)touchgfx::Bitmap::COMPRESSED_RGB565) >> 3, 296, ((uint8_t)touchgfx::Bitmap::COMPRESSED_RGB565) & 0x7 },
    { image_miaobiao, image_miaobiao_extra_data, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 65, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_naozhong, image_naozhong_extra_data, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 65, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_shezhi, image_shezhi_extra_data, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 65, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_taiwan, image_taiwan_extra_data, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 65, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_uiuug, 0, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 65, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_wurao, image_wurao_extra_data, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 65, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_zhendong, image_zhendong_extra_data, 65, 65, 0, 0, 65, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 65, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
